(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))e(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const l of r.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&e(l)}).observe(document,{childList:!0,subtree:!0});function i(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(o){if(o.ep)return;o.ep=!0;const r=i(o);fetch(o.href,r)}})();document.addEventListener("DOMContentLoaded",()=>{console.log("DOM fully loaded and parsed"),document.getElementById("aliceDogTokenBalance"),document.getElementById("aliceCatTokenBalance"),document.getElementById("aliceShareOfLiquidityPool"),document.getElementById("bobDogTokenBalance"),document.getElementById("bobCatTokenBalance"),document.getElementById("bobShareOfLiquidityPool"),document.getElementById("carolDogTokenBalance"),document.getElementById("carolCatTokenBalance"),document.getElementById("carolShareOfLiquidityPool"),document.getElementById("daveDogTokenBalance"),document.getElementById("daveCatTokenBalance"),document.getElementById("daveShareOfLiquidityPool"),document.getElementById("dexDogTokenBalance"),document.getElementById("dexCatTokenBalance"),document.getElementById("relativePriceDogTokenInCatToken"),document.getElementById("relativePriceCatTokenInDogToken"),document.getElementById("executeTradeButton").addEventListener("click",h),document.getElementById("executeUserSelect"),document.getElementById("executeActionSelect"),document.getElementById("executeTokenSelect"),document.getElementById("executeAmountInput");const t=document.getElementById("liquidityCatAmountInput");document.getElementById("liquidityDogAmountInput").addEventListener("input",d=>I(d)),t.addEventListener("input",d=>H(d)),document.getElementById("liquidityUserSelect");const e=document.getElementById("depositLiquidityButton"),o=document.getElementById("withdrawLiquidityButton");e.addEventListener("click",p),o.addEventListener("click",f),document.getElementById("coinbaseArbitrageButton").addEventListener("click",()=>k()),document.getElementById("coinbaseArbitrageOneStepButton").addEventListener("click",()=>k(1)),document.getElementById("coinbaseDogTokenPriceInput"),document.getElementById("coinbaseCatTokenPriceInput"),document.getElementById("airdropUserSelect"),document.getElementById("airdropTokenSelect"),document.getElementById("airdropAmountInput"),document.getElementById("airdropButton").addEventListener("click",L),M(),B()});function L(){const n=airdropUserSelect.value,t=airdropTokenSelect.value,i=parseFloat(airdropAmountInput.value);if(isNaN(i)||i<=0){alert("Please enter a valid amount greater than 0.");return}console.log(`Airdropping ${i} of ${t} Token to ${n}`);const e=n.toLowerCase(),o=parseFloat(document.getElementById(`${e}DogTokenBalance`).innerHTML),r=parseFloat(document.getElementById(`${e}CatTokenBalance`).innerHTML);t==="dogToken"?document.getElementById(`${e}DogTokenBalance`).innerHTML=a(o+i):t==="catToken"&&(document.getElementById(`${e}CatTokenBalance`).innerHTML=a(r+i))}function k(n=1/0){const t=parseFloat(coinbaseDogTokenPriceInput.value),i=parseFloat(coinbaseCatTokenPriceInput.value),e=t/i,o=parseFloat(relativePriceDogTokenInCatToken.innerHTML),r=.01;if(e>o+r){console.log("Arbitrage opportunity: Buy Dog Token on DEX and sell on Coinbase");let l=parseFloat(dexDogTokenBalance.innerHTML),c=parseFloat(dexCatTokenBalance.innerHTML),d=0,u=0;for(;e>c/l&&n>0;){const s=1*c/(l-1);if(l<1||c<s)break;d+=1,u+=s,l-=1,c+=s,n-=1}d>0?(console.log(`Bought ${d} Dog Tokens on DEX for ${u} Cat Tokens`),dexDogTokenBalance.innerHTML=a(l),dexCatTokenBalance.innerHTML=a(c),B()):console.log("No arbitrage opportunity found")}else if(e<o-r){console.log("Arbitrage opportunity: Buy Cat Token on DEX and sell on Coinbase");let l=parseFloat(dexDogTokenBalance.innerHTML),c=parseFloat(dexCatTokenBalance.innerHTML),d=0,u=0;for(;e<c/l&&n>0;){const s=1*l/(c-1);if(c<1||l<s)break;d+=1,u+=s,c-=1,l+=s,n-=1}d>0?(console.log(`Bought ${d} Cat Tokens on DEX for ${u} Dog Tokens`),dexDogTokenBalance.innerHTML=a(l),dexCatTokenBalance.innerHTML=a(c),B()):console.log("No arbitrage opportunity found")}else console.log("No arbitrage opportunity found")}function p(){const n=liquidityUserSelect.value,t=parseFloat(liquidityDogAmountInput.value),i=parseFloat(liquidityCatAmountInput.value);if(isNaN(t)||t<=0||isNaN(i)||i<=0){alert("Please enter a valid Token amount greater than 0.");return}console.log(`Depositing liquidity: ${n} wants to deposit ${t} Dog Tokens and ${i} Cat Tokens`);const e=n.toLowerCase(),o=parseFloat(document.getElementById(`${e}DogTokenBalance`).innerHTML),r=parseFloat(document.getElementById(`${e}CatTokenBalance`).innerHTML),l=parseFloat(document.getElementById(`${e}ShareOfLiquidityPool`).innerHTML),c=parseFloat(dexDogTokenBalance.innerHTML),d=parseFloat(dexCatTokenBalance.innerHTML),u=c+d;if(o<t){alert(`${n} does not have enough Dog Tokens to deposit.`);return}if(r<i){alert(`${n} does not have enough Cat Tokens to deposit.`);return}if(c===0&&d===0){if(t<=0||i<=0){alert("Initial liquidity must be greater than 0 for both Dog and Cat Tokens.");return}document.getElementById(`${e}ShareOfLiquidityPool`).innerHTML="100",dexDogTokenBalance.innerHTML=a(t),dexCatTokenBalance.innerHTML=a(i),document.getElementById(`${e}DogTokenBalance`).innerHTML=a(o-t),document.getElementById(`${e}CatTokenBalance`).innerHTML=a(r-i),B();return}const s=t+i,g=s/(u+s)*100;document.getElementById(`${e}ShareOfLiquidityPool`).innerHTML=a(l+g),["alice","bob","carol","dave"].forEach(T=>{if(T!==e){const m=parseFloat(document.getElementById(`${T}ShareOfLiquidityPool`).innerHTML)*u/(u+s);m<0?document.getElementById(`${T}ShareOfLiquidityPool`).innerHTML="0":m>100?document.getElementById(`${T}ShareOfLiquidityPool`).innerHTML="100":document.getElementById(`${T}ShareOfLiquidityPool`).innerHTML=a(m)}}),document.getElementById(`${e}DogTokenBalance`).innerHTML=a(o-t),document.getElementById(`${e}CatTokenBalance`).innerHTML=a(r-i),dexDogTokenBalance.innerHTML=a(c+t),dexCatTokenBalance.innerHTML=a(d+i),B()}function f(){const n=liquidityUserSelect.value,t=n.toLowerCase(),i=parseFloat(document.getElementById(`${t}ShareOfLiquidityPool`).innerHTML);if(i<=0){alert(`${n} does not have any share of the liquidity pool to withdraw.`);return}console.log(`Withdrawing liquidity: ${n} wants to withdraw their share of the liquidity pool`);const e=parseFloat(dexDogTokenBalance.innerHTML),o=parseFloat(dexCatTokenBalance.innerHTML),r=e+o,l=i/100*e,c=i/100*o,d=parseFloat(document.getElementById(`${t}DogTokenBalance`).innerHTML),u=parseFloat(document.getElementById(`${t}CatTokenBalance`).innerHTML);document.getElementById(`${t}DogTokenBalance`).innerHTML=a(d+l),document.getElementById(`${t}CatTokenBalance`).innerHTML=a(u+c),dexDogTokenBalance.innerHTML=a(e-l),dexCatTokenBalance.innerHTML=a(o-c),document.getElementById(`${t}ShareOfLiquidityPool`).innerHTML="0",["alice","bob","carol","dave"].forEach(g=>{if(g!==t)if(r-(l+c)<=0)document.getElementById(`${g}ShareOfLiquidityPool`).innerHTML="0";else{const T=parseFloat(document.getElementById(`${g}ShareOfLiquidityPool`).innerHTML)*r/(r-(l+c));T<0?document.getElementById(`${g}ShareOfLiquidityPool`).innerHTML="0":T>100?document.getElementById(`${g}ShareOfLiquidityPool`).innerHTML="100":document.getElementById(`${g}ShareOfLiquidityPool`).innerHTML=a(T)}}),B()}function I(n){const t=n.target.value;if(isNaN(t)||t<=0){n.target.value="";return}else{const i=parseFloat(t),e=parseFloat(dexDogTokenBalance.innerHTML),o=parseFloat(dexCatTokenBalance.innerHTML);if(e===0&&o===0)return;if(e===0)return;if(o===0)return;{const r=i*o/e;liquidityCatAmountInput.value=a(r)}}}function H(n){const t=n.target.value;if(isNaN(t)||t<=0){n.target.value="";return}else{const i=parseFloat(t),e=parseFloat(dexDogTokenBalance.innerHTML),o=parseFloat(dexCatTokenBalance.innerHTML);if(e===0&&o===0)return;if(e===0)return;if(o===0)return;{const r=i*e/o;liquidityDogAmountInput.value=a(r)}}}function M(){aliceDogTokenBalance.innerHTML="0",aliceCatTokenBalance.innerHTML="0",aliceShareOfLiquidityPool.innerHTML="0",bobDogTokenBalance.innerHTML="0",bobCatTokenBalance.innerHTML="0",bobShareOfLiquidityPool.innerHTML="0",carolDogTokenBalance.innerHTML="0",carolCatTokenBalance.innerHTML="0",carolShareOfLiquidityPool.innerHTML="0",daveDogTokenBalance.innerHTML="0",daveCatTokenBalance.innerHTML="0",daveShareOfLiquidityPool.innerHTML="0",dexDogTokenBalance.innerHTML="0",dexCatTokenBalance.innerHTML="0",relativePriceDogTokenInCatToken.innerHTML="1",relativePriceCatTokenInDogToken.innerHTML="1",coinbaseDogTokenPriceInput.value="1",coinbaseCatTokenPriceInput.value="1"}function a(n){return n.toFixed(16).replace(/\.?0+$/,"")}function B(){const n=parseFloat(dexDogTokenBalance.innerHTML),t=parseFloat(dexCatTokenBalance.innerHTML);if(n===0&&t===0)relativePriceDogTokenInCatToken.innerHTML="N/A",relativePriceCatTokenInDogToken.innerHTML="N/A";else if(n===0)relativePriceDogTokenInCatToken.innerHTML="Infinity",relativePriceCatTokenInDogToken.innerHTML="0";else if(t===0)relativePriceDogTokenInCatToken.innerHTML="0",relativePriceCatTokenInDogToken.innerHTML="Infinity";else{const i=t/n,e=a(i),o=a(1/i);relativePriceDogTokenInCatToken.innerHTML=e,relativePriceCatTokenInDogToken.innerHTML=o}}function C(n,t,i,e){n=n.toLowerCase();const o=parseFloat(document.getElementById(`${n}DogTokenBalance`).innerHTML),r=parseFloat(document.getElementById(`${n}CatTokenBalance`).innerHTML),l=parseFloat(dexDogTokenBalance.innerHTML),c=parseFloat(dexCatTokenBalance.innerHTML);if(t==="dogToken"){if(i==="sell"){if(o<e){alert(`${n.charAt(0).toUpperCase()+n.slice(1)} does not have enough Dog Tokens to sell.`);return}const d=e*c/(l+e);document.getElementById(`${n}DogTokenBalance`).innerHTML=a(o-e),document.getElementById(`${n}CatTokenBalance`).innerHTML=a(r+d),dexDogTokenBalance.innerHTML=a(l+e),dexCatTokenBalance.innerHTML=a(c-d)}else if(i==="buy"){if(l<e){alert(`DEX does not have enough Dog Tokens for ${n.charAt(0).toUpperCase()+n.slice(1)} to buy.`);return}const d=e*c/(l-e);if(r<d){alert(`${n.charAt(0).toUpperCase()+n.slice(1)} does not have enough Cat Tokens to buy Dog Tokens.`);return}document.getElementById(`${n}DogTokenBalance`).innerHTML=a(o+e),document.getElementById(`${n}CatTokenBalance`).innerHTML=a(r-d),dexDogTokenBalance.innerHTML=a(l-e),dexCatTokenBalance.innerHTML=a(c+d)}}else if(t==="catToken"){if(i==="sell"){if(r<e){alert(`${n.charAt(0).toUpperCase()+n.slice(1)} does not have enough Cat Tokens to sell.`);return}const d=e*l/(c+e);document.getElementById(`${n}CatTokenBalance`).innerHTML=a(r-e),document.getElementById(`${n}DogTokenBalance`).innerHTML=a(o+d),dexCatTokenBalance.innerHTML=a(c+e),dexDogTokenBalance.innerHTML=a(l-d)}else if(i==="buy"){if(c<e){alert(`DEX does not have enough Cat Tokens for ${n.charAt(0).toUpperCase()+n.slice(1)} to buy.`);return}const d=e*l/(c-e);if(o<d){alert(`${n.charAt(0).toUpperCase()+n.slice(1)} does not have enough Dog Tokens to buy Cat Tokens.`);return}document.getElementById(`${n}CatTokenBalance`).innerHTML=a(r+e),document.getElementById(`${n}DogTokenBalance`).innerHTML=a(o-d),dexCatTokenBalance.innerHTML=a(c-e),dexDogTokenBalance.innerHTML=a(l+d)}}B()}function h(){const n=executeUserSelect.value,t=executeActionSelect.value,i=executeTokenSelect.value,e=parseFloat(executeAmountInput.value);if(isNaN(e)||e<=0){alert("Please enter a valid amount greater than 0.");return}console.log(`Executing trade: ${n} wants to ${t} ${e} of ${i} Token`),C(n,i,t,e)}
